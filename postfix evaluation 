/*C program to evaluate postfix expression*/
#include <stdio.h>
#define MAX 20
int stack[MAX];
int top=-1;
void push(int item)
{
    if(top==MAX-1)
    {
        printf("stack overflow\n");
    }
    stack[++top]=item;
}
int pop()
{
 int item;
 if(top==-1)
 {
     printf("stack underflow\n");
 }
 item=stack[top];
 top--;
 return item;
 }
 int isempty()
 {
     if(top==-1)return 1;
     else return 0;
 }
 int isoperand(char ch)
 {
     if(ch>='0'&&ch<='9')return 1;
     else return 0;
 }
 int main()
 {
     char postfix[20],ch;
     int op1,op2,r,i;
     printf("enter postfix expression:\n");
     scanf("%s",postfix);
     for(i=0;postfix[i]!='\0';i++)
     {
         ch=postfix[i];
         if(isoperand(ch))push(ch-'0');
         else
         {
             op2=pop();
             op1=pop();
             switch(ch)
             {
                 case '+': r=op1+op2;
                           break;
                case '-':  r=op1-op2;
                           break;
                case '*':  r=op1*op2;
                           break;
                case '/':  r=op1/op2;
                           break;
                case '%':  r=op1%op2;
                           break;
             }
             push(r);
         }
     }
     r=pop();
     if(!isempty())printf("invalid postfix expression\n");
     else printf("result=%d\n",r);
     return 0;
 }